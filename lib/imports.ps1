<#
 # imports.ps1
 #
 # Define all imports necessary for the Client Monitor script to function properly.
 #  Most (if not all) of the "library" files are context-sensitive and thus cannot be ran
 #  in a stand-alone matter: they depend on the root Client Monitor script to make them
 #  function as a single unit.
 # This file defines every necessary import to make the script work (besides configuration).
 #>



######################################################################################
# Copyright (C) 2019 "Notsoano Nimus", as a free software project
#  licensed under GNU GPLv3.
#
# Original Repository: https://github.com/NotsoanoNimus/client-monitor
# Author: Notsoano Nimus <postmaster@thestraightpath.email>
#
# This program is free software: you can redistribute it and/or modify it under
#  the terms of the GNU General Public License as published by the Free Software
#  Foundation, either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
#  this program. If not, see https://www.gnu.org/licenses/.
######################################################################################



# Define modules to import/use. These modules MUST remain in the same directory as this imports file.
using module '.\CliMonClient.psm1'

# Get the current path of the library imports script (self-referential path).
$ImportsDirectory = Split-Path $PSCommandPath

# Import all necessary classes, methods, globals, etc.
@(
    "ClientSessions",
    "GatherInformation",
    "CompareData",
    "GenerateNotification",
    "SendNotification",
    "Miscellaneous"
) | ForEach-Object { . "$ImportsDirectory\$_.ps1" }


# Other important global declarations. Serves to also nullify the globals if the script is being
#  run multiple times from the same instance of PowerShell.
# List of CliMonClient objects instantiated at the start of the script.
$global:CliMonClients = $null
# SLATED FOR FUTURE USE. A container for all client session objects that can be easily referenced.
#  This will be crucial for implementing simultaneous session calls across all targets.
$global:ClientSessions = $null
# An object containing all deltas for each client.
$global:CliMonDeltas = $null
# Whether or not there were deltas detected.
$global:CliMonNoDeltas = $True
# Two filename trackers that are populated when the respective reports are generated.
#  These are in place so the "Send" portion of script can attach the proper files, if enabled.
$global:CliMonDeltasReportName = ""
$global:CliMonFlatReportCsvName = ""
# Holds all final body text (including wrapping HTML) for the notification.
#  If set to "NO-CHANGE", then a notification is NEVER sent.
$global:CliMonNotification = ""
# Control color alternation between clients in the final HTML notification.
$global:CliMonFlipColors = $False
# Object that holds the initial state of the tracking filters for installed application updates.
$global:CliMonUpdatedApplicationTrackingFilters = @{}
$global:CliMonAutoTrackingIndexChanged = $False
# Tracking list/array for report files generated by the current instance of Client Monitor.
$global:CliMonGeneratedReports = @()
# Global indicator of whether or not the notification email failed to send (if it's enabled).
$global:CliMonEmailFailure = $False
# If there was an email failure, this text should be set with the error.
$global:CliMonEmailErrorText = $null


# Set the "ImportedDependencies" variable to True once all imports have completed.
$ImportedDependencies = $True
